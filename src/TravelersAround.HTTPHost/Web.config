<?xml version="1.0"?>
<configuration>
  <configSections>
    <section name="log4net" type="log4net.Config.Log4NetConfigurationSectionHandler, log4net"/>
  </configSections>

  <log4net xsi:noNamespaceSchemaLocation="http://csharptest.net/downloads/schema/log4net.xsd"
           xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    <appender name="RollingFileAppender" type="log4net.Appender.RollingFileAppender">
      <file value="logs\log-file.txt" />
      <appendToFile value="true" />
      <rollingStyle value="Size" />
      <maxSizeRollBackups value="10" />
      <maximumFileSize value="1MB" />
      <staticLogFileName value="true" />
      <layout type="log4net.Layout.PatternLayout">
        <conversionPattern value="%level %date [%thread]:%logger - %message %newline %exception %newline" />
      </layout>
    </appender>

    <root>
      <level value="INFO"/>
      <appender-ref ref="RollingFileAppender"/>
    </root>
  </log4net>
  
  <appSettings>
    <!-- The time in minutes a user is considered idle-->
    <add key="IdleTime" value="1"/>
    <!-- Cache clean up time (in hours) for idle users-->
    <add key="IdleUsersCleanUpTime" value="24"/>
  </appSettings>
  
  <!--Trace configuration-->
  <system.diagnostics>
    <sources>
      <source name="System.ServiceModel" switchValue="Warning, ActivityTracing"
        propagateActivity="true">
        <listeners>
          <add type="System.Diagnostics.DefaultTraceListener" name="Default">
            <filter type="" />
          </add>
          <add name="ServiceModelTraceListener">
            <filter type="" />
          </add>
        </listeners>
      </source>
    </sources>
    <sharedListeners>
      <add initializeData="d:\thesis\src\travelersaround.httphost\web_tracelog.svclog"
        type="System.Diagnostics.XmlWriterTraceListener, System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"
        name="ServiceModelTraceListener" traceOutputOptions="Timestamp">
        <filter type="" />
      </add>
    </sharedListeners>
  </system.diagnostics>
  
  <connectionStrings>
    <add name="TravelersAroundEntities"
         connectionString="metadata=res://*/TravelersAround.csdl|res://*/TravelersAround.ssdl|res://*/TravelersAround.msl;provider=System.Data.SqlClient;provider connection string=&quot;data source=.\SQLEXPRESS;AttachDBFilename=|DataDirectory|TravelersAround.mdf;integrated security=True;pooling=False;multipleactiveresultsets=True;App=EntityFramework&quot;"
         providerName="System.Data.EntityClient" />
    <add name="ApplicationServices"
         connectionString="data source=.\SQLEXPRESS;AttachDBFilename=|DataDirectory|TravelersAround.mdf;integrated security=True"
         providerName="System.Data.SqlClient"/>
  </connectionStrings>
  
  <system.web>
    <compilation debug="true" targetFramework="4.0" />

    <membership>
      <providers>
        <clear/>
        <add name="AspNetSqlMembershipProvider"
             type="System.Web.Security.SqlMembershipProvider"
             connectionStringName="ApplicationServices"
             enablePasswordRetrieval="false"
             enablePasswordReset="true"
             requiresQuestionAndAnswer="false"
             requiresUniqueEmail="true"
             maxInvalidPasswordAttempts="5"
             minRequiredPasswordLength="6"
             minRequiredNonalphanumericCharacters="0"
             passwordAttemptWindow="10"
             applicationName="TravelersAround" />
      </providers>
    </membership>

    <profile>
      <providers>
        <clear/>
        <add name="AspNetSqlProfileProvider"
             type="System.Web.Profile.SqlProfileProvider"
             connectionStringName="ApplicationServices"
             applicationName="TravelersAround" />
      </providers>
    </profile>

    <roleManager enabled="false">
      <providers>
        <clear/>
        <add name="AspNetSqlRoleProvider"
             type="System.Web.Security.SqlRoleProvider"
             connectionStringName="ApplicationServices"
             applicationName="TravelersAround" />
      </providers>
    </roleManager>
  </system.web>
  
  <system.serviceModel>
    <services>
      <service name="TravelersAround.Service.TravelersAroundService" behaviorConfiguration="apikey">
        <endpoint name="ITravelersAroundService" address="" binding="webHttpBinding"
          bindingConfiguration="" contract="TravelersAround.Contracts.ITravelersAroundService" />
      </service>
      <service name="TravelersAround.Service.MembershipService">
        <endpoint name="IMembershipService" address="" binding="webHttpBinding"
          bindingConfiguration="" contract="TravelersAround.Contracts.IMembershipService"  />
      </service>
    </services>
    
    <!-- This binding enables file uploading and downloading via streaming -->
    <bindings>
      <webHttpBinding>
        <binding transferMode="Streamed" maxReceivedMessageSize="1536000" maxBufferSize="65536">
        </binding>
      </webHttpBinding>
    </bindings>
    
    <behaviors>
      <serviceBehaviors>
        <behavior name="apikey">
          <!-- This behavior enables API Key Verification -->
          <serviceAuthorization serviceAuthorizationManagerType="TravelersAround.HTTPHost.APIKeyAuthorization, TravelersAround.HTTPHost" />
          <!-- To receive exception details in faults for debugging purposes, set the value below to true.  Set to false before deployment to avoid disclosing exception information -->
          <serviceDebug includeExceptionDetailInFaults="false"/>
        </behavior>
        <behavior>
        </behavior>
      </serviceBehaviors>
    </behaviors>
    
    <serviceHostingEnvironment aspNetCompatibilityEnabled="true" multipleSiteBindingsEnabled="true" />

    <standardEndpoints>
      <webHttpEndpoint>
        <standardEndpoint name="" helpEnabled="false" automaticFormatSelectionEnabled="false" defaultOutgoingResponseFormat="Json" />
      </webHttpEndpoint>
    </standardEndpoints>
    
  </system.serviceModel>
  
 <system.webServer>
   <modules runAllManagedModulesForAllRequests="true">
     <add name="UrlRoutingModule" type="System.Web.Routing.UrlRoutingModule, System.Web, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
   </modules>
  </system.webServer>
  
  
</configuration>
