@model TravelersAround.ServiceProxy.ViewModels.ProfileUpdateView

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>

<h2>Edit profile</h2>
<div class="rounded-box">
<h3>Your current profile picture</h3>
@using (Html.BeginForm("UploadPicture", "Profile", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    <div>
        <div class="profilePicture">
            <img class="profile_pic" src="@Url.Action("LoadPicture","Profile", new { id = Model.TravelerID})" alt="Profile Picture" />
        </div>
        <input type="file" name="uploadedFile"  />
        @Html.ValidationMessage("uploadedFile")
        <input class="submit-button" type="submit" value="Upload" />
    </div>
}
</div>
<div id="profile-edit" class="rounded-box">
@using (Html.BeginForm())
{
    @Html.ValidationSummary(true)
    <fieldset>
        <div class="editor-label">
            @Html.LabelFor(model => model.Firstname)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Firstname)
            @Html.ValidationMessageFor(model => model.Firstname)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Lastname)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Lastname)
            @Html.ValidationMessageFor(model => model.Lastname)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Birthdate)
        </div>
        <div class="editor-field">
            @{ 
                DateTime temp;
                string birthdate = "";
                if (DateTime.TryParse(Model.Birthdate, out temp))
                {
                    birthdate = temp.ToShortDateString();
                }
            }
            <input type="text" name="Birthdate" value="@birthdate" />
            @Html.ValidationMessageFor(model => model.Birthdate)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.StatusMessage, "Status message")
        </div>
        <div class="editor-field">
            @Html.TextAreaFor(model => model.StatusMessage)
            @Html.ValidationMessageFor(model => model.StatusMessage)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Gender)
        </div>
        <div class="editor-field">
            @Html.RadioButtonFor(model => model.Gender, "M", new { id = "gender_male" })
            <label for="gender_male">Male</label>
            @Html.RadioButtonFor(model => model.Gender, "F", new { id = "gender_female" })
            <label for="gender_female">Female</label>
            @Html.ValidationMessageFor(model => model.Gender)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.IsAvailable, "Are you available to meet travelers?")
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.IsAvailable)
            @Html.ValidationMessageFor(model => model.IsAvailable)
        </div>

        <p>
            <input class="submit-button" type="submit" value="Save" />
        </p>
    </fieldset>
}
</div>
