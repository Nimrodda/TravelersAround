@model TravelersAround.ServiceProxy.ViewModels.SearchView

@{
    ViewBag.Title = "Look for travelers around you";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Travelers around you</h2>

@Html.Partial("_StatusMessagePartial")

<div class="rounded-box">
    @using (Html.BeginForm())
    {
        <h3>Customize the search results by adding the following filters</h3>        
        @Html.ValidationSummary(true)
            <ul>
                <li class="editor-field">
                    @Html.EditorFor(model => model.IncludeOfflineTravelers)
                    @Html.LabelFor(model => model.IncludeOfflineTravelers)
                    @Html.ValidationMessageFor(model => model.IncludeOfflineTravelers)
                </li>

                <li class="editor-field">
                    <input class="submit-button" type="submit" value="Search" />
                </li>
            </ul>
    }
</div>
<div class="main-area">
    @if (Model.Travelers.Entities.Count == 0)
    {
        <p class="info-message">It seems that currently now there are no travelers around you</p>
    }
    else
    {
        <ul id="search-results" class="rounded-box">
        @foreach (var traveler in Model.Travelers.Entities)
        {
            <li>
                <img class="profile_pic" src="@Url.Action("LoadPicture", "Profile", new { id = traveler.TravelerID })" alt="@String.Concat(traveler.Firstname, " ", traveler.Lastname)" />
                <div class="traveler-info">
                    <p>@traveler.Firstname @traveler.Lastname</p>
                    <p>@(DateTime.Now.Year - DateTime.Parse(traveler.Birthdate).Year), @traveler.Gender</p>
                    <p>@traveler.City, @traveler.Country</p>
                </div>
                <div class="traveler-statusmsg">
                    <p>@traveler.StatusMessage</p>
                </div>
                <div class="search-buttons">
                    <a class="add-icon" title="Add to friends list" href="@Url.Action("Add", "Friends", new { id = traveler.TravelerID })">Add to friends</a>
                    <a class="send-message-icon" title="Send a message" href="@Url.Action("Send", "Messages", new { id = traveler.TravelerID })">Send message</a>
                </div>
            </li>
        }
        </ul>
    }
    @if (Model.Travelers.TotalPageCount > 0)
{
    if (Model.Travelers.HasPrevious)
    {
        @Html.ActionLink("Previous", "Index", new { p = Model.Page - 1 })
    }
    if (Model.Travelers.TotalPageCount > 0)
    {
        for (int i = 0; i < Model.Travelers.TotalPageCount + 1; i++)
        {
            @Html.ActionLink((i + 1).ToString(), "Index", new { p = i })      
        }
    }
    if (Model.Travelers.HasNext)
    {
        @Html.ActionLink("Next", "Index", new { p = Model.Page + 1 })
    }
}
</div>

